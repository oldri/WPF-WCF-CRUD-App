//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AS2_991666875_S.NorthwindService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeData", Namespace="http://schemas.datacontract.org/2004/07/WCFWPFCRUDEmployeeService.Models")]
    [System.SerializableAttribute()]
    public partial class EmployeeData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeID {
            get {
                return this.EmployeeIDField;
            }
            set {
                if ((this.EmployeeIDField.Equals(value) != true)) {
                    this.EmployeeIDField = value;
                    this.RaisePropertyChanged("EmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NorthwindService.IWCFNorthwindService")]
    public interface IWCFNorthwindService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFNorthwindService/CreateEmployee", ReplyAction="http://tempuri.org/IWCFNorthwindService/CreateEmployeeResponse")]
        void CreateEmployee(AS2_991666875_S.NorthwindService.EmployeeData employeeData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFNorthwindService/CreateEmployee", ReplyAction="http://tempuri.org/IWCFNorthwindService/CreateEmployeeResponse")]
        System.Threading.Tasks.Task CreateEmployeeAsync(AS2_991666875_S.NorthwindService.EmployeeData employeeData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFNorthwindService/ReadEmployee", ReplyAction="http://tempuri.org/IWCFNorthwindService/ReadEmployeeResponse")]
        AS2_991666875_S.NorthwindService.EmployeeData ReadEmployee(int employeeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFNorthwindService/ReadEmployee", ReplyAction="http://tempuri.org/IWCFNorthwindService/ReadEmployeeResponse")]
        System.Threading.Tasks.Task<AS2_991666875_S.NorthwindService.EmployeeData> ReadEmployeeAsync(int employeeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFNorthwindService/UpdateEmployee", ReplyAction="http://tempuri.org/IWCFNorthwindService/UpdateEmployeeResponse")]
        void UpdateEmployee(int employeeId, AS2_991666875_S.NorthwindService.EmployeeData employeeData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFNorthwindService/UpdateEmployee", ReplyAction="http://tempuri.org/IWCFNorthwindService/UpdateEmployeeResponse")]
        System.Threading.Tasks.Task UpdateEmployeeAsync(int employeeId, AS2_991666875_S.NorthwindService.EmployeeData employeeData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFNorthwindService/DeleteEmployee", ReplyAction="http://tempuri.org/IWCFNorthwindService/DeleteEmployeeResponse")]
        void DeleteEmployee(int employeeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFNorthwindService/DeleteEmployee", ReplyAction="http://tempuri.org/IWCFNorthwindService/DeleteEmployeeResponse")]
        System.Threading.Tasks.Task DeleteEmployeeAsync(int employeeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFNorthwindService/GetEmployees", ReplyAction="http://tempuri.org/IWCFNorthwindService/GetEmployeesResponse")]
        AS2_991666875_S.NorthwindService.EmployeeData[] GetEmployees();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFNorthwindService/GetEmployees", ReplyAction="http://tempuri.org/IWCFNorthwindService/GetEmployeesResponse")]
        System.Threading.Tasks.Task<AS2_991666875_S.NorthwindService.EmployeeData[]> GetEmployeesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWCFNorthwindServiceChannel : AS2_991666875_S.NorthwindService.IWCFNorthwindService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WCFNorthwindServiceClient : System.ServiceModel.ClientBase<AS2_991666875_S.NorthwindService.IWCFNorthwindService>, AS2_991666875_S.NorthwindService.IWCFNorthwindService {
        
        public WCFNorthwindServiceClient() {
        }
        
        public WCFNorthwindServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WCFNorthwindServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFNorthwindServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFNorthwindServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CreateEmployee(AS2_991666875_S.NorthwindService.EmployeeData employeeData) {
            base.Channel.CreateEmployee(employeeData);
        }
        
        public System.Threading.Tasks.Task CreateEmployeeAsync(AS2_991666875_S.NorthwindService.EmployeeData employeeData) {
            return base.Channel.CreateEmployeeAsync(employeeData);
        }
        
        public AS2_991666875_S.NorthwindService.EmployeeData ReadEmployee(int employeeId) {
            return base.Channel.ReadEmployee(employeeId);
        }
        
        public System.Threading.Tasks.Task<AS2_991666875_S.NorthwindService.EmployeeData> ReadEmployeeAsync(int employeeId) {
            return base.Channel.ReadEmployeeAsync(employeeId);
        }
        
        public void UpdateEmployee(int employeeId, AS2_991666875_S.NorthwindService.EmployeeData employeeData) {
            base.Channel.UpdateEmployee(employeeId, employeeData);
        }
        
        public System.Threading.Tasks.Task UpdateEmployeeAsync(int employeeId, AS2_991666875_S.NorthwindService.EmployeeData employeeData) {
            return base.Channel.UpdateEmployeeAsync(employeeId, employeeData);
        }
        
        public void DeleteEmployee(int employeeId) {
            base.Channel.DeleteEmployee(employeeId);
        }
        
        public System.Threading.Tasks.Task DeleteEmployeeAsync(int employeeId) {
            return base.Channel.DeleteEmployeeAsync(employeeId);
        }
        
        public AS2_991666875_S.NorthwindService.EmployeeData[] GetEmployees() {
            return base.Channel.GetEmployees();
        }
        
        public System.Threading.Tasks.Task<AS2_991666875_S.NorthwindService.EmployeeData[]> GetEmployeesAsync() {
            return base.Channel.GetEmployeesAsync();
        }
    }
}
